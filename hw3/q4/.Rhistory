#      type="b", pch = 19, frame = FALSE,
#      xlab="Number of clusters K",
#      ylab="Total within-clusters sum of squares")
#
#
#
# fviz_nbclust(sm_sca, kmeans, method = "silhouette")
# Run k-means with 6 clusters and 25 starts
clust1 = kmeanspp(sm_sca, 9, nstart=25)
fviz_cluster(clust1, data = sm_sca,  stand = FALSE,
ellipse.type = "t", geom=c("point"), main="Kmeans++ clusters visualization on first two principal components") + theme_bw()
mu = attr(sm_sca,"scaled:center")
sigma = attr(sm_sca,"scaled:scale")
# What are the clusters?
clust1$center  # not super helpful
clust1$center
rs      <- as.data.frame(t(clust1$center))
rs$category <- rownames(rs)
rs      <- melt(rs, id.vars=c("category"))
View(rs)
ggplot(rs, aes(x=category, y=value, color=variable)) + geom_line()
setwd("/Users/dhwanit/Google Drive/UT Austin Courses/SDS323_Spring2020/hw3/q4")
library(tidyverse)  # data manipulation
library(cluster)    # clustering algorithms
library(factoextra) # clustering algorithms & visualization
library(LICORS)  # for kmeans++
library(ggcorrplot)
library(reshape2)
library(ggplot2)
sm_data <- read.csv("social_marketing.csv")
summary(sm_data)
head(sm_data, 10)
sm_feat_raw <- sm_data[,2:length(sm_data)]
# Creating a correlation plot
cormat <- round(cor(sm_feat_raw), 2)
head(cormat[, 1:6])
ggcorrplot(cormat, hc.order = TRUE, type = "lower", outline.color = "white")
##Some very strong +ve correlations can be seen, like between  health nutrition and personal fitness, cooking and fashion, online_gaming and college_uni.
##A rather peculiar one is between sports_fandom and religion (Probably if you are a fan of God, you are likely to be a fan of sports team :) ).
sm_user <- sm_data[, 1]
#Scaling of the data to get frequency of a particular of type of tweet.
sm_feat = sm_feat_raw/(rowSums(sm_feat_raw))
#Clustering on original scaled centered data
sm_sca = scale(sm_feat_raw, center=TRUE, scale=TRUE)
#sm_sca = sm_feat #not doing scaling as each value represents a proportion of tweet in each category by a user
set.seed(123)
#
# # function to compute total within-cluster sum of square
# wss <- function(k) {
#   kmeans(sm_sca, k, nstart = 10 )$tot.withinss
# }
#
# # Compute and plot wss for k = 1 to k = 15
# k.values <- 1:15
#
# # extract wss for 2-15 clusters
# wss_values <- map_dbl(k.values, wss)
#
# plot(k.values, wss_values,
#      type="b", pch = 19, frame = FALSE,
#      xlab="Number of clusters K",
#      ylab="Total within-clusters sum of squares")
#
#
#
# fviz_nbclust(sm_sca, kmeans, method = "silhouette")
# Run k-means with 6 clusters and 25 starts
clust1 = kmeanspp(sm_sca, 9, nstart=25)
fviz_cluster(clust1, data = sm_sca,  stand = FALSE,
ellipse.type = "t", geom=c("point"), main="Kmeans++ clusters visualization on first two principal components") + theme_bw()
mu = attr(sm_sca,"scaled:center")
sigma = attr(sm_sca,"scaled:scale")
# What are the clusters?
clust1$center  # not super helpful
clust1$center
rs      <- as.data.frame(t(clust1$center))
rs$category <- rownames(rs)
rs      <- melt(rs, id.vars=c("category"), variable.name = "cluster", value.name = "mean value in std  dev units")
View(rs)
ggplot(rs, aes(x=category, y=value, group=variable, color=variable)) + geom_line()
setwd("/Users/dhwanit/Google Drive/UT Austin Courses/SDS323_Spring2020/hw3/q4")
library(tidyverse)  # data manipulation
library(cluster)    # clustering algorithms
library(factoextra) # clustering algorithms & visualization
library(LICORS)  # for kmeans++
library(ggcorrplot)
library(reshape2)
library(ggplot2)
sm_data <- read.csv("social_marketing.csv")
summary(sm_data)
head(sm_data, 10)
sm_feat_raw <- sm_data[,2:length(sm_data)]
# Creating a correlation plot
cormat <- round(cor(sm_feat_raw), 2)
head(cormat[, 1:6])
ggcorrplot(cormat, hc.order = TRUE, type = "lower", outline.color = "white")
##Some very strong +ve correlations can be seen, like between  health nutrition and personal fitness, cooking and fashion, online_gaming and college_uni.
##A rather peculiar one is between sports_fandom and religion (Probably if you are a fan of God, you are likely to be a fan of sports team :) ).
sm_user <- sm_data[, 1]
#Scaling of the data to get frequency of a particular of type of tweet.
sm_feat = sm_feat_raw/(rowSums(sm_feat_raw))
#Clustering on original scaled centered data
sm_sca = scale(sm_feat_raw, center=TRUE, scale=TRUE)
#sm_sca = sm_feat #not doing scaling as each value represents a proportion of tweet in each category by a user
set.seed(123)
#
# # function to compute total within-cluster sum of square
# wss <- function(k) {
#   kmeans(sm_sca, k, nstart = 10 )$tot.withinss
# }
#
# # Compute and plot wss for k = 1 to k = 15
# k.values <- 1:15
#
# # extract wss for 2-15 clusters
# wss_values <- map_dbl(k.values, wss)
#
# plot(k.values, wss_values,
#      type="b", pch = 19, frame = FALSE,
#      xlab="Number of clusters K",
#      ylab="Total within-clusters sum of squares")
#
#
#
# fviz_nbclust(sm_sca, kmeans, method = "silhouette")
# Run k-means with 6 clusters and 25 starts
clust1 = kmeanspp(sm_sca, 9, nstart=25)
fviz_cluster(clust1, data = sm_sca,  stand = FALSE,
ellipse.type = "t", geom=c("point"), main="Kmeans++ clusters visualization on first two principal components") + theme_bw()
mu = attr(sm_sca,"scaled:center")
sigma = attr(sm_sca,"scaled:scale")
# What are the clusters?
clust1$center  # not super helpful
clust1$center
rs      <- as.data.frame(t(clust1$center))
rs$category <- rownames(rs)
rs      <- melt(rs, id.vars=c("category"), variable.name = "cluster")
View(rs)
ggplot(rs, aes(x=category, y=value, group=cluster, color=cluster)) + geom_line()
setwd("/Users/dhwanit/Google Drive/UT Austin Courses/SDS323_Spring2020/hw3/q4")
library(tidyverse)  # data manipulation
library(cluster)    # clustering algorithms
library(factoextra) # clustering algorithms & visualization
library(LICORS)  # for kmeans++
library(ggcorrplot)
library(reshape2)
library(ggplot2)
sm_data <- read.csv("social_marketing.csv")
summary(sm_data)
head(sm_data, 10)
sm_feat_raw <- sm_data[,2:length(sm_data)]
# Creating a correlation plot
cormat <- round(cor(sm_feat_raw), 2)
head(cormat[, 1:6])
ggcorrplot(cormat, hc.order = TRUE, type = "lower", outline.color = "white")
##Some very strong +ve correlations can be seen, like between  health nutrition and personal fitness, cooking and fashion, online_gaming and college_uni.
##A rather peculiar one is between sports_fandom and religion (Probably if you are a fan of God, you are likely to be a fan of sports team :) ).
sm_user <- sm_data[, 1]
#Scaling of the data to get frequency of a particular of type of tweet.
sm_feat = sm_feat_raw/(rowSums(sm_feat_raw))
#Clustering on original scaled centered data
sm_sca = scale(sm_feat_raw, center=TRUE, scale=TRUE)
#sm_sca = sm_feat #not doing scaling as each value represents a proportion of tweet in each category by a user
set.seed(123)
#
# # function to compute total within-cluster sum of square
# wss <- function(k) {
#   kmeans(sm_sca, k, nstart = 10 )$tot.withinss
# }
#
# # Compute and plot wss for k = 1 to k = 15
# k.values <- 1:15
#
# # extract wss for 2-15 clusters
# wss_values <- map_dbl(k.values, wss)
#
# plot(k.values, wss_values,
#      type="b", pch = 19, frame = FALSE,
#      xlab="Number of clusters K",
#      ylab="Total within-clusters sum of squares")
#
#
#
# fviz_nbclust(sm_sca, kmeans, method = "silhouette")
# Run k-means with 6 clusters and 25 starts
clust1 = kmeanspp(sm_sca, 9, nstart=25)
fviz_cluster(clust1, data = sm_sca,  stand = FALSE,
ellipse.type = "t", geom=c("point"), main="Kmeans++ clusters visualization on first two principal components") + theme_bw()
mu = attr(sm_sca,"scaled:center")
sigma = attr(sm_sca,"scaled:scale")
# What are the clusters?
clust1$center  # not super helpful
clust1$center
rs      <- as.data.frame(t(clust1$center))
rs$category <- rownames(rs)
rs      <- melt(rs, id.vars=c("category"), variable.name = "cluster")
View(rs)
ggplot(rs, aes(x=category, y=value, group=cluster, color=cluster)) + geom_line() + theme(axis.text.x = element_text(angle=90, hjust=1))
setwd("/Users/dhwanit/Google Drive/UT Austin Courses/SDS323_Spring2020/hw3/q4")
library(tidyverse)  # data manipulation
library(cluster)    # clustering algorithms
library(factoextra) # clustering algorithms & visualization
library(LICORS)  # for kmeans++
library(ggcorrplot)
library(reshape2)
library(ggplot2)
sm_data <- read.csv("social_marketing.csv")
summary(sm_data)
head(sm_data, 10)
sm_feat_raw <- sm_data[,2:length(sm_data)]
# Creating a correlation plot
cormat <- round(cor(sm_feat_raw), 2)
head(cormat[, 1:6])
ggcorrplot(cormat, hc.order = TRUE, type = "lower", outline.color = "white")
##Some very strong +ve correlations can be seen, like between  health nutrition and personal fitness, cooking and fashion, online_gaming and college_uni.
##A rather peculiar one is between sports_fandom and religion (Probably if you are a fan of God, you are likely to be a fan of sports team :) ).
sm_user <- sm_data[, 1]
#Scaling of the data to get frequency of a particular of type of tweet.
sm_feat = sm_feat_raw/(rowSums(sm_feat_raw))
#Clustering on original scaled centered data
sm_sca = scale(sm_feat_raw, center=TRUE, scale=TRUE)
#sm_sca = sm_feat #not doing scaling as each value represents a proportion of tweet in each category by a user
set.seed(123)
#
# # function to compute total within-cluster sum of square
# wss <- function(k) {
#   kmeans(sm_sca, k, nstart = 10 )$tot.withinss
# }
#
# # Compute and plot wss for k = 1 to k = 15
# k.values <- 1:15
#
# # extract wss for 2-15 clusters
# wss_values <- map_dbl(k.values, wss)
#
# plot(k.values, wss_values,
#      type="b", pch = 19, frame = FALSE,
#      xlab="Number of clusters K",
#      ylab="Total within-clusters sum of squares")
#
#
#
# fviz_nbclust(sm_sca, kmeans, method = "silhouette")
# Run k-means with 6 clusters and 25 starts
clust1 = kmeanspp(sm_sca, 9, nstart=25)
fviz_cluster(clust1, data = sm_sca,  stand = FALSE,
ellipse.type = "t", geom=c("point"), main="Kmeans++ clusters visualization on first two principal components") + theme_bw()
mu = attr(sm_sca,"scaled:center")
sigma = attr(sm_sca,"scaled:scale")
# What are the clusters?
clust1$center  # not super helpful
clust1$center
rs      <- as.data.frame(t(clust1$center))
rs$category <- rownames(rs)
rs      <- melt(rs, id.vars=c("category"), variable.name = "cluster")
View(rs)
ggplot(rs, aes(x=category, y=value, group=cluster, color=cluster)) + geom_line() + theme(axis.text.x = element_text(angle=90, hjust=1))
tmp <- rs %>%
mutate(cluster2=cluster)
tmp %>%
ggplot( aes(x=category, y=value)) +
geom_line( data=tmp %>% dplyr::select(-cluster), aes(group=cluster2), color="grey", size=0.5, alpha=0.5) +
geom_line( aes(color=cluster), color="#69b3a2", size=1.2 )+
scale_color_viridis(discrete = TRUE) +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=14),
panel.grid = element_blank()
) +
ggtitle("A spaghetti chart of category prominance in each cluster") +
facet_wrap(~name)
setwd("/Users/dhwanit/Google Drive/UT Austin Courses/SDS323_Spring2020/hw3/q4")
library(tidyverse)  # data manipulation
library(cluster)    # clustering algorithms
library(factoextra) # clustering algorithms & visualization
library(LICORS)  # for kmeans++
library(ggcorrplot)
library(reshape2)
library(ggplot2)
library(streamgraph)
library(viridis)
library(DT)
library(plotly)
sm_data <- read.csv("social_marketing.csv")
summary(sm_data)
head(sm_data, 10)
sm_feat_raw <- sm_data[,2:length(sm_data)]
# Creating a correlation plot
cormat <- round(cor(sm_feat_raw), 2)
head(cormat[, 1:6])
ggcorrplot(cormat, hc.order = TRUE, type = "lower", outline.color = "white")
##Some very strong +ve correlations can be seen, like between  health nutrition and personal fitness, cooking and fashion, online_gaming and college_uni.
##A rather peculiar one is between sports_fandom and religion (Probably if you are a fan of God, you are likely to be a fan of sports team :) ).
sm_user <- sm_data[, 1]
#Scaling of the data to get frequency of a particular of type of tweet.
sm_feat = sm_feat_raw/(rowSums(sm_feat_raw))
#Clustering on original scaled centered data
sm_sca = scale(sm_feat_raw, center=TRUE, scale=TRUE)
#sm_sca = sm_feat #not doing scaling as each value represents a proportion of tweet in each category by a user
set.seed(123)
#
# # function to compute total within-cluster sum of square
# wss <- function(k) {
#   kmeans(sm_sca, k, nstart = 10 )$tot.withinss
# }
#
# # Compute and plot wss for k = 1 to k = 15
# k.values <- 1:15
#
# # extract wss for 2-15 clusters
# wss_values <- map_dbl(k.values, wss)
#
# plot(k.values, wss_values,
#      type="b", pch = 19, frame = FALSE,
#      xlab="Number of clusters K",
#      ylab="Total within-clusters sum of squares")
#
#
#
# fviz_nbclust(sm_sca, kmeans, method = "silhouette")
# Run k-means with 6 clusters and 25 starts
clust1 = kmeanspp(sm_sca, 9, nstart=25)
fviz_cluster(clust1, data = sm_sca,  stand = FALSE,
ellipse.type = "t", geom=c("point"), main="Kmeans++ clusters visualization on first two principal components") + theme_bw()
mu = attr(sm_sca,"scaled:center")
sigma = attr(sm_sca,"scaled:scale")
# What are the clusters?
clust1$center  # not super helpful
clust1$center
rs      <- as.data.frame(t(clust1$center))
rs$category <- rownames(rs)
rs      <- melt(rs, id.vars=c("category"), variable.name = "cluster")
View(rs)
ggplot(rs, aes(x=category, y=value, group=cluster, color=cluster)) + geom_line() + theme(axis.text.x = element_text(angle=90, hjust=1))
tmp <- rs %>%
mutate(cluster2=cluster)
tmp %>%
ggplot( aes(x=category, y=value)) +
geom_line( data=tmp %>% dplyr::select(-cluster), aes(group=cluster2), color="grey", size=0.5, alpha=0.5) +
geom_line( aes(color=cluster), color="#69b3a2", size=1.2 )+
scale_color_viridis(discrete = TRUE) +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=14),
panel.grid = element_blank()
) +
ggtitle("A spaghetti chart of category prominance in each cluster") +
facet_wrap(~name)
install.packages("hrbrthemes")
setwd("/Users/dhwanit/Google Drive/UT Austin Courses/SDS323_Spring2020/hw3/q4")
library(tidyverse)  # data manipulation
library(cluster)    # clustering algorithms
library(factoextra) # clustering algorithms & visualization
library(LICORS)  # for kmeans++
library(ggcorrplot)
library(reshape2)
library(ggplot2)
library(streamgraph)
library(viridis)
library(DT)
library(plotly)
library(hrbrthemes)
sm_data <- read.csv("social_marketing.csv")
summary(sm_data)
head(sm_data, 10)
sm_feat_raw <- sm_data[,2:length(sm_data)]
# Creating a correlation plot
cormat <- round(cor(sm_feat_raw), 2)
head(cormat[, 1:6])
ggcorrplot(cormat, hc.order = TRUE, type = "lower", outline.color = "white")
##Some very strong +ve correlations can be seen, like between  health nutrition and personal fitness, cooking and fashion, online_gaming and college_uni.
##A rather peculiar one is between sports_fandom and religion (Probably if you are a fan of God, you are likely to be a fan of sports team :) ).
sm_user <- sm_data[, 1]
#Scaling of the data to get frequency of a particular of type of tweet.
sm_feat = sm_feat_raw/(rowSums(sm_feat_raw))
#Clustering on original scaled centered data
sm_sca = scale(sm_feat_raw, center=TRUE, scale=TRUE)
#sm_sca = sm_feat #not doing scaling as each value represents a proportion of tweet in each category by a user
set.seed(123)
#
# # function to compute total within-cluster sum of square
# wss <- function(k) {
#   kmeans(sm_sca, k, nstart = 10 )$tot.withinss
# }
#
# # Compute and plot wss for k = 1 to k = 15
# k.values <- 1:15
#
# # extract wss for 2-15 clusters
# wss_values <- map_dbl(k.values, wss)
#
# plot(k.values, wss_values,
#      type="b", pch = 19, frame = FALSE,
#      xlab="Number of clusters K",
#      ylab="Total within-clusters sum of squares")
#
#
#
# fviz_nbclust(sm_sca, kmeans, method = "silhouette")
# Run k-means with 6 clusters and 25 starts
clust1 = kmeanspp(sm_sca, 9, nstart=25)
fviz_cluster(clust1, data = sm_sca,  stand = FALSE,
ellipse.type = "t", geom=c("point"), main="Kmeans++ clusters visualization on first two principal components") + theme_bw()
mu = attr(sm_sca,"scaled:center")
sigma = attr(sm_sca,"scaled:scale")
# What are the clusters?
clust1$center  # not super helpful
clust1$center
rs      <- as.data.frame(t(clust1$center))
rs$category <- rownames(rs)
rs      <- melt(rs, id.vars=c("category"), variable.name = "cluster")
View(rs)
ggplot(rs, aes(x=category, y=value, group=cluster, color=cluster)) + geom_line() + theme(axis.text.x = element_text(angle=90, hjust=1))
tmp <- rs %>%
mutate(cluster2=cluster)
tmp %>%
ggplot( aes(x=category, y=value)) +
geom_line( data=tmp %>% dplyr::select(-cluster), aes(group=cluster2), color="grey", size=0.5, alpha=0.5) +
geom_line( aes(color=cluster), color="#69b3a2", size=1.2 )+
scale_color_viridis(discrete = TRUE) +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=14),
panel.grid = element_blank()
) +
ggtitle("A spaghetti chart of category prominance in each cluster") +
facet_wrap(~name)
install.packages(c("hrbrthemes", "kableExtra"))
install.packages(c("hrbrthemes", "kableExtra"))
setwd("/Users/dhwanit/Google Drive/UT Austin Courses/SDS323_Spring2020/hw3/q4")
library(tidyverse)  # data manipulation
library(cluster)    # clustering algorithms
library(factoextra) # clustering algorithms & visualization
library(LICORS)  # for kmeans++
library(ggcorrplot)
library(reshape2)
library(ggplot2)
library(streamgraph)
library(viridis)
library(DT)
library(plotly)
library(hrbrthemes)
library(kableExtra)
sm_data <- read.csv("social_marketing.csv")
summary(sm_data)
head(sm_data, 10)
sm_feat_raw <- sm_data[,2:length(sm_data)]
# Creating a correlation plot
cormat <- round(cor(sm_feat_raw), 2)
head(cormat[, 1:6])
ggcorrplot(cormat, hc.order = TRUE, type = "lower", outline.color = "white")
##Some very strong +ve correlations can be seen, like between  health nutrition and personal fitness, cooking and fashion, online_gaming and college_uni.
##A rather peculiar one is between sports_fandom and religion (Probably if you are a fan of God, you are likely to be a fan of sports team :) ).
sm_user <- sm_data[, 1]
#Scaling of the data to get frequency of a particular of type of tweet.
sm_feat = sm_feat_raw/(rowSums(sm_feat_raw))
#Clustering on original scaled centered data
sm_sca = scale(sm_feat_raw, center=TRUE, scale=TRUE)
#sm_sca = sm_feat #not doing scaling as each value represents a proportion of tweet in each category by a user
set.seed(123)
#
# # function to compute total within-cluster sum of square
# wss <- function(k) {
#   kmeans(sm_sca, k, nstart = 10 )$tot.withinss
# }
#
# # Compute and plot wss for k = 1 to k = 15
# k.values <- 1:15
#
# # extract wss for 2-15 clusters
# wss_values <- map_dbl(k.values, wss)
#
# plot(k.values, wss_values,
#      type="b", pch = 19, frame = FALSE,
#      xlab="Number of clusters K",
#      ylab="Total within-clusters sum of squares")
#
#
#
# fviz_nbclust(sm_sca, kmeans, method = "silhouette")
# Run k-means with 6 clusters and 25 starts
clust1 = kmeanspp(sm_sca, 9, nstart=25)
fviz_cluster(clust1, data = sm_sca,  stand = FALSE,
ellipse.type = "t", geom=c("point"), main="Kmeans++ clusters visualization on first two principal components") + theme_bw()
mu = attr(sm_sca,"scaled:center")
sigma = attr(sm_sca,"scaled:scale")
# What are the clusters?
clust1$center  # not super helpful
clust1$center
rs      <- as.data.frame(t(clust1$center))
rs$category <- rownames(rs)
rs      <- melt(rs, id.vars=c("category"), variable.name = "cluster")
View(rs)
ggplot(rs, aes(x=category, y=value, group=cluster, color=cluster)) + geom_line() + theme(axis.text.x = element_text(angle=90, hjust=1))
tmp <- rs %>%
mutate(cluster2=cluster)
tmp %>%
ggplot( aes(x=category, y=value)) +
geom_line( data=tmp %>% dplyr::select(-cluster), aes(group=cluster2), color="grey", size=0.5, alpha=0.5) +
geom_line( aes(color=cluster), color="#69b3a2", size=1.2 )+
scale_color_viridis(discrete = TRUE) +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=14),
panel.grid = element_blank()
) +
ggtitle("A spaghetti chart of category prominance in each cluster") +
facet_wrap(~name)
