#Cumulative sum of delta_inf
italy_cum_delta_cnf = cumsum(italy_delta_cnf)
italy_cum_delta_cnf
#italy_inf_melt$cum_delta_inf <- italy_cum_delta_inf
#View(italy_inf_melt)
###EXTRACTING DEATHS DATA OF ITALY
deaths_countries_melt = melt(deaths_countries, id=c("Province.State", "Country.Region", "Lat", "Long"), variable.name = "Day")
deaths_countries_melt = deaths_countries_melt[which(deaths_countries_melt$value > -1),]
#View(confirmed_countries_melt)
ggplot(deaths_countries_melt, aes(x=Day, y=log(value), group=Country.Region, color=Country.Region)) +
geom_point() +
geom_line()
#Extract Italy data from countries death data
italy_deaths_melt = deaths_countries_melt[which(deaths_countries_melt$Country.Region == country), ]
#Extract deaths number as a vector
italy_deaths = italy_deaths_melt$value
italy_deaths
#Extract delta deathsvector delta_deaths(t) = D(t) - D(t-1)
italy_delta_deaths = diff(italy_deaths)
italy_delta_deaths
#Cumulative sum of delta_inf
italy_cum_delta_deaths = cumsum(italy_delta_deaths)
italy_cum_delta_deaths
#italy_inf_melt$cum_delta_inf <- italy_cum_delta_inf
#View(italy_inf_melt)
###EXTRACTING RECOVERED DATA OF ITALY
recovered_countries_melt = melt(recovered_countries, id=c("Province.State", "Country.Region", "Lat", "Long"), variable.name = "Day")
recovered_countries_melt = recovered_countries_melt[which(recovered_countries_melt$value > -1),]
#View(confirmed_countries_melt)
ggplot(recovered_countries_melt, aes(x=Day, y=log(value), group=Country.Region, color=Country.Region)) +
geom_point() +
geom_line()
#Extract Italy data from countries recovered data
italy_recovered_melt = recovered_countries_melt[which(recovered_countries_melt$Country.Region == country), ]
#Extract recovered number as a vector
italy_recovered = italy_recovered_melt$value
italy_recovered
#Extract delta recovered vector delta_recovered(t) = R(t) - R(t-1)
italy_delta_recovered = diff(italy_recovered)
italy_delta_recovered
#Cumulative sum of delta_recovered
italy_cum_delta_recovered = cumsum(italy_delta_recovered)
italy_cum_delta_recovered
### Caluclating infected numbers from confirmed cases
#Extract infected number cases as a vector
italy_inf = italy_cnf - italy_recovered - italy_deaths
italy_inf
#Extract delta infected vector delta_inf(t) = I(t) - I(t-1)
italy_delta_inf = diff(italy_inf)
italy_delta_inf
#Cumulative sum of delta_inf
italy_cum_delta_inf = cumsum(italy_delta_inf)
italy_cum_delta_inf
###ESTIMATING CASE FATALITY RATIO
cor(italy_cum_delta_inf, italy_cum_delta_deaths)
#high correlation 0.996
#Making data frame of cumulative data
italy_cum_data_full = data.frame(delta_inf= italy_delta_inf, cum_delta_inf=italy_cum_delta_inf, delta_recovered = italy_delta_recovered, cum_delta_recovered= italy_cum_delta_recovered, delta_deaths = italy_delta_deaths, cum_delta_deaths=italy_cum_delta_deaths)
##VARY THE NUMBER OF DAYS CHOSEN FOR ANALYSIS
ndays = 40:97
ndays
gamma_data <- data.frame(matrix(ncol = 3, nrow = 0))
x <- c("est", "lwr", "upr")
colnames(gamma_data) <- x
beta_data <- data.frame(matrix(ncol = 3, nrow = 0))
x <- c("est", "lwr", "upr")
colnames(beta_data) <- x
R0_data <- data.frame(matrix(ncol = 3, nrow = 0))
x <- c("est", "lwr", "upr")
colnames(R0_data) <- x
#loop over days window chosen
for (days in ndays) {
italy_cum_data = italy_cum_data_full[1:days, ]
#View(italy_cum_data)
#fitting a linear model for case fatality ratio
italy_gamma <- lm(cum_delta_deaths ~ cum_delta_inf  -1  , data=italy_cum_data)  # build linear regression model on full data
summary(italy_gamma)
###ESTIMATING CASE  RECOVERY RATIO
cor(italy_cum_delta_inf, italy_cum_delta_recovered)
#high correlation 0.92
#fitting a linear model for case recovery ratio
italy_beta <- lm(cum_delta_recovered ~ cum_delta_inf -1 , data=italy_cum_data)  # build linear regression model on full data with no intercept
###ESTIMATING R0
#fitting a linear model for case basic reproducibility number R0
italy_R0 <- lm(cum_delta_deaths + cum_delta_recovered + cum_delta_inf  ~ I(cum_delta_recovered + cum_delta_deaths) - 1  , data=italy_cum_data)  # build linear regression model on full data
##Storing estimations and conf intervals
conf = confint(italy_gamma)
gamma_row <- list(est = summary(italy_gamma)$coefficients[1], lwr = conf[1], upr = conf[2])
gamma_row
gamma_data = rbind(gamma_data, gamma_row)
conf = confint(italy_beta)
beta_row <- list(est = summary(italy_beta)$coefficients[1], lwr = conf[1], upr = conf[2])
beta_row
beta_data = rbind(beta_data, beta_row)
conf = confint(italy_R0)
R0_row <- list(est = summary(italy_R0)$coefficients[1], lwr = conf[1], upr = conf[2])
R0_row
R0_data = rbind(R0_data, R0_row)
}
ggplot(gamma_data, aes(ndays, est)) + geom_point() + geom_line(aes(ndays, est))
ggplot(beta_data, aes(ndays, est)) + geom_point() + geom_line(aes(ndays, est))
ggplot(R0_data[20:, ], aes(ndays, est)) + geom_point() + geom_line(aes(ndays, est))
library(ggplot2)
library(foreach)
library(LICORS)
library(caret)
library(reshape2)
library(olsrr)
confirmed <- read.csv("../COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
deaths <- read.csv("../COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv")
recovered <- read.csv("../COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_recovered_global.csv")
summary(confirmed)
countries = c("Italy", "Spain", "Germany", "India", "Sweden", "Singapore", "Iran", "Korea, South")
confirmed_countries = confirmed[confirmed$Country.Region %in% countries,]
deaths_countries = deaths[deaths$Country.Region %in% countries,]
recovered_countries = recovered[recovered$Country.Region %in% countries,]
country = "Korea, South"
#confirmed_italy = confirmed[confirmed$Country.Region == "Italy", ]
#confirmed_italy_melt = melt(confirmed_italy, id=c("Province.State", "Country.Region", "Lat", "Long"), variable.name = "Day")
#View(confirmed_italy_melt)
### EXTRACTING INFECTED DATA OF ITALY
confirmed_countries_melt = melt(confirmed_countries, id=c("Province.State", "Country.Region", "Lat", "Long"), variable.name = "Day")
confirmed_countries_melt = confirmed_countries_melt[which(confirmed_countries_melt$value > -1),]
#View(confirmed_countries_melt)
ggplot(confirmed_countries_melt, aes(x=Day, y=log(value), group=Country.Region, color=Country.Region)) +
geom_point() +
geom_line()
#Extract Italy data from countries data
italy_cnf_melt = confirmed_countries_melt[which(confirmed_countries_melt$Country.Region == country), ]
#Extract infected number cases as a vector
italy_cnf = italy_cnf_melt$value
italy_cnf
#Extract delta infected vector delta_inf(t) = I(t) - I(t-1)
italy_delta_cnf = diff(italy_cnf)
italy_delta_cnf
#Cumulative sum of delta_inf
italy_cum_delta_cnf = cumsum(italy_delta_cnf)
italy_cum_delta_cnf
#italy_inf_melt$cum_delta_inf <- italy_cum_delta_inf
#View(italy_inf_melt)
###EXTRACTING DEATHS DATA OF ITALY
deaths_countries_melt = melt(deaths_countries, id=c("Province.State", "Country.Region", "Lat", "Long"), variable.name = "Day")
deaths_countries_melt = deaths_countries_melt[which(deaths_countries_melt$value > -1),]
#View(confirmed_countries_melt)
ggplot(deaths_countries_melt, aes(x=Day, y=log(value), group=Country.Region, color=Country.Region)) +
geom_point() +
geom_line()
#Extract Italy data from countries death data
italy_deaths_melt = deaths_countries_melt[which(deaths_countries_melt$Country.Region == country), ]
#Extract deaths number as a vector
italy_deaths = italy_deaths_melt$value
italy_deaths
#Extract delta deathsvector delta_deaths(t) = D(t) - D(t-1)
italy_delta_deaths = diff(italy_deaths)
italy_delta_deaths
#Cumulative sum of delta_inf
italy_cum_delta_deaths = cumsum(italy_delta_deaths)
italy_cum_delta_deaths
#italy_inf_melt$cum_delta_inf <- italy_cum_delta_inf
#View(italy_inf_melt)
###EXTRACTING RECOVERED DATA OF ITALY
recovered_countries_melt = melt(recovered_countries, id=c("Province.State", "Country.Region", "Lat", "Long"), variable.name = "Day")
recovered_countries_melt = recovered_countries_melt[which(recovered_countries_melt$value > -1),]
#View(confirmed_countries_melt)
ggplot(recovered_countries_melt, aes(x=Day, y=log(value), group=Country.Region, color=Country.Region)) +
geom_point() +
geom_line()
#Extract Italy data from countries recovered data
italy_recovered_melt = recovered_countries_melt[which(recovered_countries_melt$Country.Region == country), ]
#Extract recovered number as a vector
italy_recovered = italy_recovered_melt$value
italy_recovered
#Extract delta recovered vector delta_recovered(t) = R(t) - R(t-1)
italy_delta_recovered = diff(italy_recovered)
italy_delta_recovered
#Cumulative sum of delta_recovered
italy_cum_delta_recovered = cumsum(italy_delta_recovered)
italy_cum_delta_recovered
### Caluclating infected numbers from confirmed cases
#Extract infected number cases as a vector
italy_inf = italy_cnf - italy_recovered - italy_deaths
italy_inf
#Extract delta infected vector delta_inf(t) = I(t) - I(t-1)
italy_delta_inf = diff(italy_inf)
italy_delta_inf
#Cumulative sum of delta_inf
italy_cum_delta_inf = cumsum(italy_delta_inf)
italy_cum_delta_inf
###ESTIMATING CASE FATALITY RATIO
cor(italy_cum_delta_inf, italy_cum_delta_deaths)
#high correlation 0.996
#Making data frame of cumulative data
italy_cum_data_full = data.frame(delta_inf= italy_delta_inf, cum_delta_inf=italy_cum_delta_inf, delta_recovered = italy_delta_recovered, cum_delta_recovered= italy_cum_delta_recovered, delta_deaths = italy_delta_deaths, cum_delta_deaths=italy_cum_delta_deaths)
##VARY THE NUMBER OF DAYS CHOSEN FOR ANALYSIS
ndays = 40:97
ndays
gamma_data <- data.frame(matrix(ncol = 3, nrow = 0))
x <- c("est", "lwr", "upr")
colnames(gamma_data) <- x
beta_data <- data.frame(matrix(ncol = 3, nrow = 0))
x <- c("est", "lwr", "upr")
colnames(beta_data) <- x
R0_data <- data.frame(matrix(ncol = 3, nrow = 0))
x <- c("est", "lwr", "upr")
colnames(R0_data) <- x
#loop over days window chosen
for (days in ndays) {
italy_cum_data = italy_cum_data_full[1:days, ]
#View(italy_cum_data)
#fitting a linear model for case fatality ratio
italy_gamma <- lm(cum_delta_deaths ~ cum_delta_inf  -1  , data=italy_cum_data)  # build linear regression model on full data
summary(italy_gamma)
###ESTIMATING CASE  RECOVERY RATIO
cor(italy_cum_delta_inf, italy_cum_delta_recovered)
#high correlation 0.92
#fitting a linear model for case recovery ratio
italy_beta <- lm(cum_delta_recovered ~ cum_delta_inf -1 , data=italy_cum_data)  # build linear regression model on full data with no intercept
###ESTIMATING R0
#fitting a linear model for case basic reproducibility number R0
italy_R0 <- lm(cum_delta_deaths + cum_delta_recovered + cum_delta_inf  ~ I(cum_delta_recovered + cum_delta_deaths) - 1  , data=italy_cum_data)  # build linear regression model on full data
##Storing estimations and conf intervals
conf = confint(italy_gamma)
gamma_row <- list(est = summary(italy_gamma)$coefficients[1], lwr = conf[1], upr = conf[2])
gamma_row
gamma_data = rbind(gamma_data, gamma_row)
conf = confint(italy_beta)
beta_row <- list(est = summary(italy_beta)$coefficients[1], lwr = conf[1], upr = conf[2])
beta_row
beta_data = rbind(beta_data, beta_row)
conf = confint(italy_R0)
R0_row <- list(est = summary(italy_R0)$coefficients[1], lwr = conf[1], upr = conf[2])
R0_row
R0_data = rbind(R0_data, R0_row)
}
ggplot(gamma_data, aes(ndays, est)) + geom_point() + geom_line(aes(ndays, est))
ggplot(beta_data, aes(ndays, est)) + geom_point() + geom_line(aes(ndays, est))
ggplot(R0_data[20:58, ], aes(ndays, est)) + geom_point() + geom_line(aes(ndays, est))
library(ggplot2)
library(foreach)
library(LICORS)
library(caret)
library(reshape2)
library(olsrr)
confirmed <- read.csv("../COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
deaths <- read.csv("../COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv")
recovered <- read.csv("../COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_recovered_global.csv")
summary(confirmed)
countries = c("Italy", "Spain", "Germany", "India", "Sweden", "Singapore", "Iran", "Korea, South")
confirmed_countries = confirmed[confirmed$Country.Region %in% countries,]
deaths_countries = deaths[deaths$Country.Region %in% countries,]
recovered_countries = recovered[recovered$Country.Region %in% countries,]
country = "Korea, South"
#confirmed_italy = confirmed[confirmed$Country.Region == "Italy", ]
#confirmed_italy_melt = melt(confirmed_italy, id=c("Province.State", "Country.Region", "Lat", "Long"), variable.name = "Day")
#View(confirmed_italy_melt)
### EXTRACTING INFECTED DATA OF ITALY
confirmed_countries_melt = melt(confirmed_countries, id=c("Province.State", "Country.Region", "Lat", "Long"), variable.name = "Day")
confirmed_countries_melt = confirmed_countries_melt[which(confirmed_countries_melt$value > -1),]
#View(confirmed_countries_melt)
ggplot(confirmed_countries_melt, aes(x=Day, y=log(value), group=Country.Region, color=Country.Region)) +
geom_point() +
geom_line()
#Extract Italy data from countries data
italy_cnf_melt = confirmed_countries_melt[which(confirmed_countries_melt$Country.Region == country), ]
#Extract infected number cases as a vector
italy_cnf = italy_cnf_melt$value
italy_cnf
#Extract delta infected vector delta_inf(t) = I(t) - I(t-1)
italy_delta_cnf = diff(italy_cnf)
italy_delta_cnf
#Cumulative sum of delta_inf
italy_cum_delta_cnf = cumsum(italy_delta_cnf)
italy_cum_delta_cnf
#italy_inf_melt$cum_delta_inf <- italy_cum_delta_inf
#View(italy_inf_melt)
###EXTRACTING DEATHS DATA OF ITALY
deaths_countries_melt = melt(deaths_countries, id=c("Province.State", "Country.Region", "Lat", "Long"), variable.name = "Day")
deaths_countries_melt = deaths_countries_melt[which(deaths_countries_melt$value > -1),]
#View(confirmed_countries_melt)
ggplot(deaths_countries_melt, aes(x=Day, y=log(value), group=Country.Region, color=Country.Region)) +
geom_point() +
geom_line()
#Extract Italy data from countries death data
italy_deaths_melt = deaths_countries_melt[which(deaths_countries_melt$Country.Region == country), ]
#Extract deaths number as a vector
italy_deaths = italy_deaths_melt$value
italy_deaths
#Extract delta deathsvector delta_deaths(t) = D(t) - D(t-1)
italy_delta_deaths = diff(italy_deaths)
italy_delta_deaths
#Cumulative sum of delta_inf
italy_cum_delta_deaths = cumsum(italy_delta_deaths)
italy_cum_delta_deaths
#italy_inf_melt$cum_delta_inf <- italy_cum_delta_inf
#View(italy_inf_melt)
###EXTRACTING RECOVERED DATA OF ITALY
recovered_countries_melt = melt(recovered_countries, id=c("Province.State", "Country.Region", "Lat", "Long"), variable.name = "Day")
recovered_countries_melt = recovered_countries_melt[which(recovered_countries_melt$value > -1),]
#View(confirmed_countries_melt)
ggplot(recovered_countries_melt, aes(x=Day, y=log(value), group=Country.Region, color=Country.Region)) +
geom_point() +
geom_line()
#Extract Italy data from countries recovered data
italy_recovered_melt = recovered_countries_melt[which(recovered_countries_melt$Country.Region == country), ]
#Extract recovered number as a vector
italy_recovered = italy_recovered_melt$value
italy_recovered
#Extract delta recovered vector delta_recovered(t) = R(t) - R(t-1)
italy_delta_recovered = diff(italy_recovered)
italy_delta_recovered
#Cumulative sum of delta_recovered
italy_cum_delta_recovered = cumsum(italy_delta_recovered)
italy_cum_delta_recovered
### Caluclating infected numbers from confirmed cases
#Extract infected number cases as a vector
italy_inf = italy_cnf - italy_recovered - italy_deaths
italy_inf
#Extract delta infected vector delta_inf(t) = I(t) - I(t-1)
italy_delta_inf = diff(italy_inf)
italy_delta_inf
#Cumulative sum of delta_inf
italy_cum_delta_inf = cumsum(italy_delta_inf)
italy_cum_delta_inf
###ESTIMATING CASE FATALITY RATIO
cor(italy_cum_delta_inf, italy_cum_delta_deaths)
#high correlation 0.996
#Making data frame of cumulative data
italy_cum_data_full = data.frame(delta_inf= italy_delta_inf, cum_delta_inf=italy_cum_delta_inf, delta_recovered = italy_delta_recovered, cum_delta_recovered= italy_cum_delta_recovered, delta_deaths = italy_delta_deaths, cum_delta_deaths=italy_cum_delta_deaths)
##VARY THE NUMBER OF DAYS CHOSEN FOR ANALYSIS
ndays = 40:97
ndays
gamma_data <- data.frame(matrix(ncol = 3, nrow = 0))
x <- c("est", "lwr", "upr")
colnames(gamma_data) <- x
beta_data <- data.frame(matrix(ncol = 3, nrow = 0))
x <- c("est", "lwr", "upr")
colnames(beta_data) <- x
R0_data <- data.frame(matrix(ncol = 3, nrow = 0))
x <- c("est", "lwr", "upr")
colnames(R0_data) <- x
#loop over days window chosen
for (days in ndays) {
italy_cum_data = italy_cum_data_full[1:days, ]
#View(italy_cum_data)
#fitting a linear model for case fatality ratio
italy_gamma <- lm(cum_delta_deaths ~ cum_delta_inf  -1  , data=italy_cum_data)  # build linear regression model on full data
summary(italy_gamma)
###ESTIMATING CASE  RECOVERY RATIO
cor(italy_cum_delta_inf, italy_cum_delta_recovered)
#high correlation 0.92
#fitting a linear model for case recovery ratio
italy_beta <- lm(cum_delta_recovered ~ cum_delta_inf -1 , data=italy_cum_data)  # build linear regression model on full data with no intercept
###ESTIMATING R0
#fitting a linear model for case basic reproducibility number R0
italy_R0 <- lm(cum_delta_deaths + cum_delta_recovered + cum_delta_inf  ~ I(cum_delta_recovered + cum_delta_deaths) - 1  , data=italy_cum_data)  # build linear regression model on full data
##Storing estimations and conf intervals
conf = confint(italy_gamma)
gamma_row <- list(est = summary(italy_gamma)$coefficients[1], lwr = conf[1], upr = conf[2])
gamma_row
gamma_data = rbind(gamma_data, gamma_row)
conf = confint(italy_beta)
beta_row <- list(est = summary(italy_beta)$coefficients[1], lwr = conf[1], upr = conf[2])
beta_row
beta_data = rbind(beta_data, beta_row)
conf = confint(italy_R0)
R0_row <- list(est = summary(italy_R0)$coefficients[1], lwr = conf[1], upr = conf[2])
R0_row
R0_data = rbind(R0_data, R0_row)
}
ggplot(gamma_data, aes(ndays, est)) + geom_point() + geom_line(aes(ndays, est))
ggplot(beta_data, aes(ndays, est)) + geom_point() + geom_line(aes(ndays, est))
ggplot(R0_data, aes(ndays, est)) + geom_point() + geom_line(aes(ndays, est))
View(R0_data)
library(ggplot2)
library(foreach)
library(LICORS)
library(caret)
library(reshape2)
library(olsrr)
confirmed <- read.csv("../COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
deaths <- read.csv("../COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv")
recovered <- read.csv("../COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_recovered_global.csv")
summary(confirmed)
countries = c("Italy", "Spain", "Germany", "India", "Sweden", "Singapore", "Iran", "Korea, South")
confirmed_countries = confirmed[confirmed$Country.Region %in% countries,]
deaths_countries = deaths[deaths$Country.Region %in% countries,]
recovered_countries = recovered[recovered$Country.Region %in% countries,]
country = "Sweden"
#confirmed_italy = confirmed[confirmed$Country.Region == "Italy", ]
#confirmed_italy_melt = melt(confirmed_italy, id=c("Province.State", "Country.Region", "Lat", "Long"), variable.name = "Day")
#View(confirmed_italy_melt)
### EXTRACTING INFECTED DATA OF ITALY
confirmed_countries_melt = melt(confirmed_countries, id=c("Province.State", "Country.Region", "Lat", "Long"), variable.name = "Day")
confirmed_countries_melt = confirmed_countries_melt[which(confirmed_countries_melt$value > -1),]
#View(confirmed_countries_melt)
ggplot(confirmed_countries_melt, aes(x=Day, y=log(value), group=Country.Region, color=Country.Region)) +
geom_point() +
geom_line()
#Extract Italy data from countries data
italy_cnf_melt = confirmed_countries_melt[which(confirmed_countries_melt$Country.Region == country), ]
#Extract infected number cases as a vector
italy_cnf = italy_cnf_melt$value
italy_cnf
#Extract delta infected vector delta_inf(t) = I(t) - I(t-1)
italy_delta_cnf = diff(italy_cnf)
italy_delta_cnf
#Cumulative sum of delta_inf
italy_cum_delta_cnf = cumsum(italy_delta_cnf)
italy_cum_delta_cnf
#italy_inf_melt$cum_delta_inf <- italy_cum_delta_inf
#View(italy_inf_melt)
###EXTRACTING DEATHS DATA OF ITALY
deaths_countries_melt = melt(deaths_countries, id=c("Province.State", "Country.Region", "Lat", "Long"), variable.name = "Day")
deaths_countries_melt = deaths_countries_melt[which(deaths_countries_melt$value > -1),]
#View(confirmed_countries_melt)
ggplot(deaths_countries_melt, aes(x=Day, y=log(value), group=Country.Region, color=Country.Region)) +
geom_point() +
geom_line()
#Extract Italy data from countries death data
italy_deaths_melt = deaths_countries_melt[which(deaths_countries_melt$Country.Region == country), ]
#Extract deaths number as a vector
italy_deaths = italy_deaths_melt$value
italy_deaths
#Extract delta deathsvector delta_deaths(t) = D(t) - D(t-1)
italy_delta_deaths = diff(italy_deaths)
italy_delta_deaths
#Cumulative sum of delta_inf
italy_cum_delta_deaths = cumsum(italy_delta_deaths)
italy_cum_delta_deaths
#italy_inf_melt$cum_delta_inf <- italy_cum_delta_inf
#View(italy_inf_melt)
###EXTRACTING RECOVERED DATA OF ITALY
recovered_countries_melt = melt(recovered_countries, id=c("Province.State", "Country.Region", "Lat", "Long"), variable.name = "Day")
recovered_countries_melt = recovered_countries_melt[which(recovered_countries_melt$value > -1),]
#View(confirmed_countries_melt)
ggplot(recovered_countries_melt, aes(x=Day, y=log(value), group=Country.Region, color=Country.Region)) +
geom_point() +
geom_line()
#Extract Italy data from countries recovered data
italy_recovered_melt = recovered_countries_melt[which(recovered_countries_melt$Country.Region == country), ]
#Extract recovered number as a vector
italy_recovered = italy_recovered_melt$value
italy_recovered
#Extract delta recovered vector delta_recovered(t) = R(t) - R(t-1)
italy_delta_recovered = diff(italy_recovered)
italy_delta_recovered
#Cumulative sum of delta_recovered
italy_cum_delta_recovered = cumsum(italy_delta_recovered)
italy_cum_delta_recovered
### Caluclating infected numbers from confirmed cases
#Extract infected number cases as a vector
italy_inf = italy_cnf - italy_recovered - italy_deaths
italy_inf
#Extract delta infected vector delta_inf(t) = I(t) - I(t-1)
italy_delta_inf = diff(italy_inf)
italy_delta_inf
#Cumulative sum of delta_inf
italy_cum_delta_inf = cumsum(italy_delta_inf)
italy_cum_delta_inf
###ESTIMATING CASE FATALITY RATIO
cor(italy_cum_delta_inf, italy_cum_delta_deaths)
#high correlation 0.996
#Making data frame of cumulative data
italy_cum_data_full = data.frame(delta_inf= italy_delta_inf, cum_delta_inf=italy_cum_delta_inf, delta_recovered = italy_delta_recovered, cum_delta_recovered= italy_cum_delta_recovered, delta_deaths = italy_delta_deaths, cum_delta_deaths=italy_cum_delta_deaths)
##VARY THE NUMBER OF DAYS CHOSEN FOR ANALYSIS
ndays = 40:97
ndays
gamma_data <- data.frame(matrix(ncol = 3, nrow = 0))
x <- c("est", "lwr", "upr")
colnames(gamma_data) <- x
beta_data <- data.frame(matrix(ncol = 3, nrow = 0))
x <- c("est", "lwr", "upr")
colnames(beta_data) <- x
R0_data <- data.frame(matrix(ncol = 3, nrow = 0))
x <- c("est", "lwr", "upr")
colnames(R0_data) <- x
#loop over days window chosen
for (days in ndays) {
italy_cum_data = italy_cum_data_full[1:days, ]
#View(italy_cum_data)
#fitting a linear model for case fatality ratio
italy_gamma <- lm(cum_delta_deaths ~ cum_delta_inf  -1  , data=italy_cum_data)  # build linear regression model on full data
summary(italy_gamma)
###ESTIMATING CASE  RECOVERY RATIO
cor(italy_cum_delta_inf, italy_cum_delta_recovered)
#high correlation 0.92
#fitting a linear model for case recovery ratio
italy_beta <- lm(cum_delta_recovered ~ cum_delta_inf -1 , data=italy_cum_data)  # build linear regression model on full data with no intercept
###ESTIMATING R0
#fitting a linear model for case basic reproducibility number R0
italy_R0 <- lm(cum_delta_deaths + cum_delta_recovered + cum_delta_inf  ~ I(cum_delta_recovered + cum_delta_deaths) - 1  , data=italy_cum_data)  # build linear regression model on full data
##Storing estimations and conf intervals
conf = confint(italy_gamma)
gamma_row <- list(est = summary(italy_gamma)$coefficients[1], lwr = conf[1], upr = conf[2])
gamma_row
gamma_data = rbind(gamma_data, gamma_row)
conf = confint(italy_beta)
beta_row <- list(est = summary(italy_beta)$coefficients[1], lwr = conf[1], upr = conf[2])
beta_row
beta_data = rbind(beta_data, beta_row)
conf = confint(italy_R0)
R0_row <- list(est = summary(italy_R0)$coefficients[1], lwr = conf[1], upr = conf[2])
R0_row
R0_data = rbind(R0_data, R0_row)
}
ggplot(gamma_data, aes(ndays, est)) + geom_point() + geom_line(aes(ndays, est))
ggplot(beta_data, aes(ndays, est)) + geom_point() + geom_line(aes(ndays, est))
ggplot(R0_data, aes(ndays, est)) + geom_point() + geom_line(aes(ndays, est))
View(R0_data)
R --version
R.version()
version
